<launch>

  <include file="$(find asv_simulator)/launch/asv.launch">
    <arg name="u_d" value="3.0" />
    <arg name="namespace" value="asv" />
    <arg name="shipname" value="asv" />
    <arg name="initial_state" value="[-50.0, 100.0, -1.56, 1.,0.,0.]" />
  </include>

  <!-- Obstacle ship -->
  <include file="$(find asv_simulator)/launch/obstacle.launch">
    <!-- <arg name="waypoint_file" value="$(find asv_simulator)/config/waypoints/west_to_east.yaml" /> -->
    <arg name="use_vo" value="False" />
    <arg name="use_sb_mpc" value="False" />
    <arg name="vessel_model_file" value="$(find asv_simulator)/config/models/ship1.urdf" />
    <arg name="namespace" value="obstacles/ship1" />
    <arg name="shipname" value="ship1" />
    <arg name="initial_state" value="[-100.0, 0.0, 0.0, 1.,0.,0.]" />
  </include>

  <include file="$(find asv_obstacle_tracker)/launch/tracker.launch"/>

  <include file="$(find asv_system)/launch/map_server.launch">
    <arg name="mapfile" value="$(find asv_system)/config/maps/empty.yaml" />
  </include>
  <!-- <node pkg="asv_simulator" name="map_mesh_node" type="meshpublisher.py" respawn="false" output="screen" /> -->


  <node name="light_scan_sim" pkg="light_scan_sim" type="light_scan_sim_node" output="screen">
    <rosparam file="$(find light_scan_sim)/config/config_asv.yaml" command="load" />
  </node>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find asv_simulator)/config/rviz/drl.rviz" />

</launch>
